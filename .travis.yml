language: go

service:
  - docker

go:
   - "1.14.x"

os:
  - linux

services:
  - docker

branches:
  only:
    - master
    - develop
    - fix/change-name
    - /^release-[0-9]+\..*$/

#addons:
#  sonarcloud:
#    organization: "open-cluster-management"
#    token:
#      secure: "ZSZzRQRHoNDLi0m1lXdVQNnTcWEqXbTpkyi3sOnRrTuro9tg8J4AscptKw5K0WBvisHxtc0tXMavBmibt6YTEVN2srhanyIkvU1i4Wsfl7Rkhrhq+bsuZQVSMfsNDig1cnV6S8T1JleXGx8WPXJpwBAV6Dk5G2ll7+zt+8MN7fHnQ5FBFTZaqHvOY/WBcL70z7YNqfHcV3forByPOxgBJO+iNAUCFFBZrmp4vY7T3uYpmUztBjim1nBIrTq3mi5U20jIoFe9TV6BZJo1XWYsS6SSHubuhUtAqy6npxxQt3b/byg0Ja0QFL6sGT0gs4JyCjV+IOYLuigGl+V+ChtlyICOh0w/aUlq/gHUnJy1necJJSwjK+BvW2T48B1muLUDK4yio8GuaRd43U+X8E8H8UN5d3LlFxesROA4dB7YCkOx5WoE8gm4yGsURmnprPI3WABeNCT+SPbnzUbwfYPRk1K/Ka0Hns/vfjqgvoMnwRNi+B1ifFHcVqDjTeJPvdMFCIU/xWewRmTMO2gevRPsiLd7mOxLIvkuPFD9XIHP1MQic8gHekMlmVww2EqPCknYOG8GfgbpbABsQmYmvg76M0N8ulSec4mDqbxq41utf32E4GxAROBgaDZEAsjZYFwgcn+VkfmKGANC3ufpEPhiupkW+Uz124P6WB5Sj5Wz2vc="
  
env:
  global:
    # Required
    - OS=linux
    - COMPONENT_TAG_EXTENSION="-${TRAVIS_COMMIT}"
    # Component Specific
    - COMPONENT_TYPE="make"
    - COMPONENT_INIT_COMMAND=${TRAVIS_BUILD_DIR}/build/install-dependencies.sh
    - COMPONENT_BUILD_COMMAND=${TRAVIS_BUILD_DIR}/build/build.sh
    - COMPONENT_UNIT_TEST_COMMAND=${TRAVIS_BUILD_DIR}/build/run-unit-tests.sh
    - COMPONENT_E2E_TEST_COMMAND=${TRAVIS_BUILD_DIR}/build/run-e2e-tests.sh

before_install:
  - ./build/install-dependencies.sh
  - export IV_REPO_ROOT=$TRAVIS_BUILD_DIR

stages:
  - lint
  - build
  - test-unit
  - test-e2e
  - publish

jobs:
  include:
    - stage: lint
      name: "Run code lint"
    #   if: type = pull_request
      script:
         - |
           make lint
    - stage: build
      name: "Build the image and push it"
      script:
         - |
            make build-images
    - stage: test-unit
      name: "Run unit test"
      script:
        - set -e
        # Bootstrap the build harness, pull test image, and run unit tests.
        - |
          make test-unit
    - stage: test-e2e
      name: "Deploy the image to a cluster and run e2e tests"
      script:
        - |
          make test-e2e
    - stage: publish
      name: "Publish the image to quay with an official version/sha tag and publish entry to integration pipeline stage"
      if: env(ENABLE_PUBLISH) = true
      script:
        - |
          make push-images
          make build-bundle
          
# --------------------------Enable later -----------------------------------
#        - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then export COMPONENT_TAG_EXTENSION="-PR${TRAVIS_PULL_REQUEST}-${TRAVIS_COMMIT}"; fi;
#        - make copyright-check TRAVIS_BRANCH=${TRAVIS_BRANCH}
#        - |
#          make
#          make component/build
#          make component/push
#          if [ "$IMAGE_SCAN" != "false" ]; then make security/scans; fi;
#        - if [ "$TRAVIS_PULL_REQUEST" == "false" -a "$TRAVIS_BRANCH" == "master" ]; then 
#            export COMPONENT_NEWTAG="latest-dev";
#            make component/tag;
#            export COMPONENT_VERSION="latest";
#            export COMPONENT_TAG_EXTENSION="-dev";
#            make component/push;
#          fi;	

#    - stage: unit-test
#      name: "Run unit test"
#      script:
#        - set -e
#        # Set the image tag differently for PRs
#        - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then export COMPONENT_TAG_EXTENSION="-PR${TRAVIS_PULL_REQUEST}-${TRAVIS_COMMIT}"; fi;
#        # Bootstrap the build harness, pull test image, and run unit tests.
#        - |
#          make
#          make component/test/unit
#        - |
#          set +e
#          make stop-instrumented  
#          set -e
#          make coverage-merge
#          make go/gosec-install
#          gosec -fmt sonarqube -out gosec.json -no-fail ./...
#          make sonar/js
#    - stage: test-e2e
#      name: "Deploy the image to a cluster and run e2e tests"
#      if: type = pull_request
#      script:
#        #Check out a clusterpool, set up oc, deploy, run e2e tests, and return clusterpool cluster
#        - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then export COMPONENT_TAG_EXTENSION="-PR${TRAVIS_PULL_REQUEST}-${TRAVIS_COMMIT}"; fi;
#        - |
#          make
#          make component/pull
#          make component/test/e2e
#    - stage: publish
#      name: "Publish the image to quay with an official version/sha tag and publish entry to integration pipeline stage"
#      if: type = push AND branch =~ /^release-[0-9]+\..*$/
#      script:
#        - |
#          make
#          make pipeline-manifest/update PIPELINE_MANIFEST_COMPONENT_SHA256=${TRAVIS_COMMIT} PIPELINE_MANIFEST_COMPONENT_REPO=${TRAVIS_REPO_SLUG} PIPELINE_MANIFEST_BRANCH=${TRAVIS_BRANCH}
