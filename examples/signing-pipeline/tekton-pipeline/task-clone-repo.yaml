apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: git-clone-repo
spec:
  params:
    - name: task-pvc
      description: the output pvc
      default: pipelinerun-pvc
      type: string
    - name: git-url
      description: The url for the git repository
    - name: git-branch
      description: The git revision (branch, tag, or sha) that should be built
      default: master
    - name: git-username
      description: the username for the git repo
    - name: git-token
      description: the personal access token for the git repo  
  volumes:
    - name: task-volume
      persistentVolumeClaim: 
        claimName: $(params.task-pvc)
  steps:
    - name: git-clone
      image: alpine/git
      volumeMounts:                                                                                                            
       - mountPath: /artifacts
         name: task-volume
      script: |
        set +x
        username=$(params.git-username)
        token=$(params.git-token)
        WS="/artifacts"
        if [[ -n "$username" ]] && [[ -n "$token" ]]; then 
          giturl=$(params.git-url)
          url="https://$token@$(echo $giturl | awk -F 'https://' '{print $2}')"
          echo url : $url


          if [ ! -z "$(ls -A $WS)" ]; then
             echo "artifacts dir is not empty, clean up."
             cd $WS
             rm * -rf
             rm -rf .git
             if [ -f .ie-sign-config.json ]; then
                rm .ie-sign-config.json             
                echo removed !
             fi
             ls -la
          fi 

          git clone $url $WS

          echo "Successfully cloned a repo."
          cd /artifacts
          ls -la
        fi        


